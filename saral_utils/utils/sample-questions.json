{"Item":{"createdAt":{"S":"2021-03-23T18:12:06.560619"},"explainationImagePath":{"NULL":true},"explainationText":{"S":"In python, indexing is zero based. So the last element is at index 5, not 6. The `len()` function gives the length of the list which in this case is 6, but using 6 as an index would throw an index out of range error as the range of index is from 0 to 5.\n\n```python\n>>> x = [1,2,3,4,5,6]\n>>> x[5]\n6\n>>> x[6]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIndexError: list index out of range\n>>> x[len(x)]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIndexError: list index out of range\n```"},"id":{"S":"96f60e41-f8dc-4bf8-b04f-659c69c03dac"},"links":{"NULL":true},"options":{"L":[{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"`x[6]`"}}},{"M":{"correct":{"BOOL":true},"imagePath":{"NULL":true},"text":{"S":"`x[5]`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"`x[len(x)]`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"None of the above"}}}]},"questionImagePath":{"NULL":true},"questionText":{"S":"In python for the given list, suppose you are trying to extract the last element. Which of the following is valid command to do so?\n```python\nx = [1, 2, 3, 4, 5, 6]\n```"},"stats":{"M":{"correctAttempts":{"NULL":true},"totalAttempts":{"NULL":true},"wrongAttempts":{"NULL":true}}},"tags":{"L":[{"S":"Python"},{"S":"List"}]},"topic":{"S":"Programming"},"updatedAt":{"NULL":true}}}
{"Item":{"createdAt":{"S":"2021-03-06T19:08:53.626135"},"explainationImagePath":{"NULL":true},"explainationText":{"S":"`x == None` and `x is None` would return `True`. But the two operators are not equivalent. PEP-8 recommends that comparisons to singletons like None should always be done with `is` or `is not`, never the equality operators. `==` is used to check for equality and `is` is used to check against object's identity.\n\nFor example:\n```python\n>>> lst = [1, 2, 3, 4]\n>>> lst == lst[:] #since both objects are equivalent\nTrue\n>>> lst is lst[:] #since both are not the same\nFalse\n```"},"id":{"S":"27a512eb-4555-4cf5-b7fa-4e90fd81a7a2"},"links":{"L":[{"S":"https://stackoverflow.com/questions/14247373/python-none-comparison-should-i-use-is-or"},{"S":"https://www.python.org/dev/peps/pep-0008/#programming-recommendations"}]},"options":{"L":[{"M":{"correct":{"BOOL":true},"imagePath":{"NULL":true},"text":{"S":"1 and 3"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"2 and 3"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"1 and 4"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"2 and 4"}}}]},"questionImagePath":{"NULL":true},"questionText":{"S":"It's given `x` is of type `None`. Which of the following would result in `True` in Python?\n\n1. `x == None`\n2. `x = None`\n3. `x is None`\n4. `x in None`"},"stats":{"M":{"correctAttempts":{"NULL":true},"totalAttempts":{"NULL":true},"wrongAttempts":{"NULL":true}}},"tags":{"L":[{"S":"Programming"},{"S":"Python"},{"S":"Data Types"}]},"topic":{"S":"Programming"},"updatedAt":{"NULL":true}}}
{"Item":{"createdAt":{"S":"2021-04-15T18:25:01.004163"},"explainationImagePath":{"NULL":true},"explainationText":{"S":"By default, when you are creating a factor vector, `NA` is not considered as a level. But when `exclude=NULL`, `NA`s are considered as a level, as given in the above example. Internally factor's levels have numerical bindings and since `NA` is also considered a level in above example, it's numerical binding is shown when converted to a numeric vector.\n\n``` r\nx = factor(c(1,2,3,NA), exclude=NULL)\nx\n#> [1] 1    2    3    <NA>\n#> Levels: 1 2 3 <NA>\nas.numeric(x)\n#> [1] 1 2 3 4\n```"},"id":{"S":"e9c97986-e33e-4011-b6ff-510f00483fcc"},"links":{"NULL":true},"options":{"L":[{"M":{"correct":{"BOOL":true},"imagePath":{"NULL":true},"text":{"S":"`1 2 3 4`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"`1 2 3`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"`1 2 3 NA`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"Error: NA not allowed in factors"}}}]},"questionImagePath":{"NULL":true},"questionText":{"S":"If the following given factor is converted to numeric vector,what would be the output?\n\n``` r\nx\n#> [1] 1    2    3    <NA>\n#> Levels: 1 2 3 <NA>\nas.numeric(x)\n```"},"stats":{"M":{"correctAttempts":{"NULL":true},"totalAttempts":{"NULL":true},"wrongAttempts":{"NULL":true}}},"tags":{"L":[{"S":"R"},{"S":"Factors"}]},"topic":{"S":"Programming"},"updatedAt":{"NULL":true}}}
{"Item":{"createdAt":{"S":"2021-03-06T18:21:19.496107"},"explainationImagePath":{"NULL":true},"explainationText":{"S":"In R, the lists don't hold the actual object but the references (or like a pointer) to those objects. So the size of list will be much smaller than you expect.\n```r\nlibrary(lobstr)\n\nx = runif(1e6)\nobj_size(x)\n#> 8,000,048 B\n\ny = list(x, x, x, x, x)\nobj_size(y)\n#> 8,000,144 B\n```"},"id":{"S":"11c7070d-0345-4f71-8cf2-9b2359f17158"},"links":{"NULL":true},"options":{"L":[{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"5 times the size of `x`"}}},{"M":{"correct":{"BOOL":true},"imagePath":{"NULL":true},"text":{"S":"Roughly same size as `x`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"1/5 the size of `x`"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"None of the above"}}}]},"questionImagePath":{"NULL":true},"questionText":{"S":"In R, let's say you have a vector `x`\n```r\nx = runif(1e6)\n```\nThe size of `x`, let's assume is 8 MB. Now you create a list `y` as follows\n```r\ny = list(x, x, x, x, x)\n```\nWhat would be the size of `y`?"},"stats":{"M":{"correctAttempts":{"NULL":true},"totalAttempts":{"NULL":true},"wrongAttempts":{"NULL":true}}},"tags":{"L":[{"S":"Programming"},{"S":"R"},{"S":"List"}]},"topic":{"S":"Programming"},"updatedAt":{"NULL":true}}}
{"Item":{"createdAt":{"S":"2021-03-06T18:57:04.044187"},"explainationImagePath":{"NULL":true},"explainationText":{"S":"The keyword *nonlocal* indicates to python that the variable is neither global nor local to the current function and python should look within the scope in which the function is defined to find a local variable with the same name.\n\n```python\n>>> def add_one():\n...     number=10\n...     def add():\n...             nonlocal number\n...             number=number+1\n...             return number\n...     print(add())\n>>> add_one()\n11\n```"},"id":{"S":"5c7222a0-c9eb-4f3f-b38e-09c1b95f558c"},"links":{"NULL":true},"options":{"L":[{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"global"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"local"}}},{"M":{"correct":{"BOOL":true},"imagePath":{"NULL":true},"text":{"S":"nonlocal"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"above"}}}]},"questionImagePath":{"NULL":true},"questionText":{"S":"Which of the following keyword should you choose to fill that dashed region, such that function `add_one()` prints 11?\n\n```python\n>>> def add_one():\n...     number=10\n...     def add():\n...             _______ number\n...             number=number+1\n...             return number\n...     print(add())\n>>> add_one()\n```"},"stats":{"M":{"correctAttempts":{"NULL":true},"totalAttempts":{"NULL":true},"wrongAttempts":{"NULL":true}}},"tags":{"L":[{"S":"Programming"},{"S":"Python"},{"S":"Scope"}]},"topic":{"S":"Programming"},"updatedAt":{"NULL":true}}}
{"Item":{"createdAt":{"S":"2021-03-06T17:43:43.777951"},"explainationImagePath":{"NULL":true},"explainationText":{"S":"The use of aesthetic `shape` is best suited for categorical variables. When it is used with continuous variable, an error is thrown.\n``` r\nlibrary(ggplot2)\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = cty, shape = hwy))\n#> Error: A continuous variable can not be mapped to shape\n```"},"id":{"S":"60064351-daba-4a82-bc14-e0dd5092586c"},"links":{"NULL":true},"options":{"L":[{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"A plot with each `hwy` number mapped to a distinct shape"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"A plot but `hwy` is ignored"}}},{"M":{"correct":{"BOOL":true},"imagePath":{"NULL":true},"text":{"S":"Error"}}},{"M":{"correct":{"BOOL":false},"imagePath":{"NULL":true},"text":{"S":"None of the above"}}}]},"questionImagePath":{"NULL":true},"questionText":{"S":"You are using `ggplot2` library for plotting the `mpg` dataset. It is given that `hwy` is a continuous variable. What happens when you try to plot using the following command?\n\n```r\nggplot(data = mpg) +\n\tgeom_point(aes(x = displ, y = cty, shape = hwy))\n```"},"stats":{"M":{"correctAttempts":{"NULL":true},"totalAttempts":{"NULL":true},"wrongAttempts":{"NULL":true}}},"tags":{"L":[{"S":"Programming"},{"S":"R"},{"S":"`ggplot()`"}]},"topic":{"S":"Programming"},"updatedAt":{"NULL":true}}}